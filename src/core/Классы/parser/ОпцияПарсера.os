#Использовать logos

Перем Опция Экспорт;
Перем ОпцииИндекс Экспорт;

Перем Лог;

Функция ПриСозданииОбъекта(КлассОпции, Индекс)
	Лог.Отладка("Создан парсер для опции %1", КлассОпции.Имя);
	Опция = КлассОпции;
	ОпцииИндекс = Индекс;
КонецФункции

Функция Поиск(Знач Аргументы, КонтекстПоиска) Экспорт

	Результат  = Новый Структура("РезультатПоиска, Аргументы", Ложь, Аргументы);

	Если Аргументы.Количество() = 0 
		ИЛИ КонтекстПоиска.СбросОпций Тогда
	
		Результат.РезультатПоиска = Опция.УстановленаИзПеременнойОкружения;
		Возврат Результат;

	КонецЕсли;

	Индекс = 0;

	Пока Индекс <= Аргументы.Вграница() Цикл
		
		ТекущийАргумент = Аргументы[Индекс];

		Если ТекущийАргумент = "-" Тогда
			Индекс = Индекс+1;
			Продолжить;
		ИначеЕсли ТекущийАргумент = "--" Тогда
			Результат.РезультатПоиска = Опция.УстановленаИзПеременнойОкружения;
			Возврат Результат;
		ИначеЕсли СтрНачинаетсяС(ТекущийАргумент, "--") Тогда

			РезультатПоискаДлиннойОпции = НайтиДлиннуюОпцию(Аргументы, Индекс, КонтекстПоиска);
			Лог.Отладка("Длинная опция найдена: %1", РезультатПоискаДлиннойОпции.Найден);
			Если РезультатПоискаДлиннойОпции.Найден Тогда
				Результат.РезультатПоиска = Истина;
				Результат.Аргументы = РезультатПоискаДлиннойОпции.Аргументы;
				Возврат Результат;
				
			КонецЕсли;

			Если РезультатПоискаДлиннойОпции.ПрибавочныйИндекс = 0 Тогда
				Возврат Новый Структура("РезультатПоиска, Аргументы", Опция.УстановленаИзПеременнойОкружения, Аргументы)
			КонецЕсли;

			Индекс = Индекс + РезультатПоискаДлиннойОпции.ПрибавочныйИндекс;
		
		ИначеЕсли СтрНачинаетсяС(ТекущийАргумент, "-") Тогда

			РезультатПоискаКороткойОпции = НайтиКоротнуюОпцию(Аргументы, Индекс, КонтекстПоиска);
			Лог.Отладка("Короткая опция найдена: %1", РезультатПоискаКороткойОпции.Найден);
			Если РезультатПоискаКороткойОпции.Найден Тогда
				Результат.РезультатПоиска = Истина;
				Результат.Аргументы = РезультатПоискаКороткойОпции.Аргументы;
				Возврат Результат;
				
			КонецЕсли;
			
			Если РезультатПоискаКороткойОпции.ПрибавочныйИндекс = 0 Тогда
				Возврат Новый Структура("РезультатПоиска, Аргументы", Опция.УстановленаИзПеременнойОкружения, Аргументы)
			КонецЕсли;

			Индекс = Индекс + РезультатПоискаКороткойОпции.ПрибавочныйИндекс;
	
		Иначе
			Результат.РезультатПоиска = Опция.УстановленаИзПеременнойОкружения;
			Возврат Результат;
		КонецЕсли;

	КонецЦикла;

	Результат.РезультатПоиска = Опция.УстановленаИзПеременнойОкружения;
	Возврат Результат;

КонецФункции

Функция НайтиКоротнуюОпцию(Знач Аргументы, Индекс, КонтекстПоиска)
	Лог.Отладка("Класс опции %1", ТипЗнч(Опция));
	Лог.Отладка("Ищю короткую опцию %1", Опция.Имя);

	ТекущийАргумент = Аргументы[Индекс];

	Результат = Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 0, Аргументы);
	
	Если СтрДлина(ТекущийАргумент) < 2 Тогда
	
		Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 0, Аргументы);

	КонецЕсли;
	
	Если Сред(ТекущийАргумент,3, 1) = "=" Тогда
		
		Имя = Лев(ТекущийАргумент,2);

		КлассОпции = ОпцииИндекс[Имя];
		Если Не КлассОпции.имя = Опция.Имя Тогда
			Результат.ПрибавочныйИндекс  = 1;
			Возврат Результат;

		КонецЕсли; 
		
		Значение = Сред(ТекущийАргумент, 4);

		Если ПустаяСтрока(СокрЛП(Значение)) Тогда
			Возврат Результат;
		КонецЕсли;


		ОпцииКонтекст = КонтекстПоиска.Опции[Опция];
		Если ОпцииКонтекст = Неопределено Тогда
			ОпцииКонтекст = Новый Массив;
		КонецЕсли;
		ОпцииКонтекст.Добавить(Значение);
		КонтекстПоиска.Опции.Вставить(Опция, ОпцииКонтекст);
		
		Аргументы.Удалить(Индекс);
		Результат.ПрибавочныйИндекс  = 1;
		Результат.Аргументы  = Аргументы;
		Результат.Найден  = Истина;

		Возврат Результат;


	КонецЕсли;

	ЧтениеСтроки = Новый ЧтениеСтроки(ТекущийАргумент);
	ИщемОпцию = ЧтениеСтроки.ВЧтениеСтрокиС(1); 

	ДлинаОпций = СтрДлина(ИщемОпцию);
	ИИ = 0;

	Лог.Отладка("Строка опции: %1", ИщемОпцию.ВСтроку(ИИ));

	Пока Не ПустаяСтрока(ИщемОпцию.ВСтрокуС(ИИ)) Цикл
	//Для ИИ = 1 По ДлинаОпций Цикл
		
		ИмяОпции = ИщемОпцию.ВСтроку(ИИ, ИИ);
		Лог.Отладка("ИмяОпции: %1", ИмяОпции);
		КлассОпции = ОпцииИндекс["-"+ИмяОпции];
		
		Лог.Отладка("КлассОпции: %1", КлассОпции);
		
		Если КлассОпции = Неопределено Тогда
			Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 0, Аргументы);
		КонецЕсли;

		Лог.Отладка("КлассОпции.ТипОпции: %1 ", КлассОпции.ТипОпции);
		
		Если КлассОпции.ТипОпции = Тип("Булево") Тогда
			
			Если Не КлассОпции.Имя = Опция.Имя Тогда
				ИИ = ИИ + 1;
				Лог.Отладка("Не нашли опцию %1, %2 <> %3", ИмяОпции, КлассОпции.Имя,  Опция.Имя);
				Продолжить;
			КонецЕсли; 

			ОпцииКонтекст = КонтекстПоиска.Опции[Опция];
			Если ОпцииКонтекст = Неопределено Тогда
				ОпцииКонтекст = Новый Массив;
			КонецЕсли;
			ОпцииКонтекст.Добавить(Истина);
			Лог.Отладка("Добавили.значение <%2> опции <%1> в контекст", Опция.Имя , Истина);
			КонтекстПоиска.Опции.Вставить(Опция,ОпцииКонтекст);
			
			Результат.Найден  = Истина;
			Лог.Отладка("Вычисление остаточного ими от <%1> до индекса <%2> после индекса <%3> ", ИщемОпцию.ВСтроку(), ИщемОпцию.ВСтрокуПо(ИИ-1), ИщемОпцию.ВСтрокуС(ИИ+1));
			ОстаточноеИмя = ИщемОпцию.ВСтрокуПо(ИИ-1) + ИщемОпцию.ВСтрокуС(ИИ+2);
			Лог.Отладка("Остаточное имя <%1> опции ", ОстаточноеИмя );
			Если ПустаяСтрока(ОстаточноеИмя) Тогда
				Аргументы.Удалить(Индекс);
				Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Истина, 1, Аргументы);
			КонецЕсли;

			Аргументы[Индекс] = "-"+ОстаточноеИмя;
			Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Истина, 0, Аргументы);
		
		КонецЕсли;

		Значение = ИщемОпцию.ВСтрокуС(ИИ+1);// Сред(ИщемОпцию, ИИ+1);

		Если ПустаяСтрока(Значение) Тогда
			
			Если Аргументы.Вграница()- Индекс = 0 Тогда
				Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 0, Аргументы);
			КонецЕсли;		

			Если Не КлассОпции.имя = Опция.Имя Тогда
				Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 2, Аргументы);
			КонецЕсли; 

			Значение = Аргументы[Индекс+1];
			
			Если СтрНачинаетсяС(Значение, "-") Тогда
				Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 0, Аргументы);
			КонецЕсли;
			
			ОпцииКонтекст = КонтекстПоиска.Опции[Опция];
			Если ОпцииКонтекст = Неопределено Тогда
				ОпцииКонтекст = Новый Массив;
			КонецЕсли;
			ОпцииКонтекст.Добавить(Значение);
			КонтекстПоиска.Опции.Вставить(Опция, ОпцииКонтекст);
			
			Если СтрДлина(ИмяОпции) = СтрДлина(ИщемОпцию) Тогда
				Аргументы.Удалить(Индекс);
				Аргументы.Удалить(Индекс); // удаление значения, т.к. индекс уже сдвинулся.
				
				Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Истина, 2, Аргументы);
			
			КонецЕсли;
			
			НовыйАргумент = СтрЗаменить(ИмяОпции, ИмяОпции, "");
			Аргументы[Индекс] = НовыйАргумент;
			Результат.Аргументы  = Аргументы;
			
			Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Истина, 1, Аргументы);

		КонецЕсли;

		Если Не КлассОпции.имя = Опция.Имя Тогда
			Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 1, Аргументы);
		КонецЕсли; 

		ОпцииКонтекст = КонтекстПоиска.Опции[Опция];
		Если ОпцииКонтекст = Неопределено Тогда
			ОпцииКонтекст = Новый Массив;
		КонецЕсли;
		ОпцииКонтекст.Добавить(Значение);
		КонтекстПоиска.Опции.Вставить(Опция, ОпцииКонтекст);
		
		ОстатокИмени = ИщемОпцию.ВСтрокуДо(ИИ-1);

		Если ПустаяСтрока(ОстатокИмени) Тогда
			//Аргументы.Удалить(Индекс);
			Аргументы.Удалить(Индекс); // удаление значения, т.к. индекс уже сдвинулся.
			
			Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Истина, 1, Аргументы);
		
		КонецЕсли;
		
		Аргументы[Индекс] = "-"+ОстатокИмени;
		
		Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Истина, 0, Аргументы);

		
	
	КонецЦикла;

	
	Возврат  Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 1, Аргументы);


КонецФункции

Функция НайтиДлиннуюОпцию(Знач Аргументы, Индекс, КонтекстПоиска)
	Лог.Отладка("Класс опции %1", ТипЗнч(Опция));
	Лог.Отладка("Ищю длинную опцию %1", Опция.Имя);

	ТекущийАргумент = Аргументы[Индекс];
	
	МассивСтрокаАргумента = СтрРазделить(ТекущийАргумент, "=");
	
	ИмяОпции = МассивСтрокаАргумента[0];
	
	КлассОпции = ОпцииИндекс[ИмяОпции];
	Если КлассОпции = Неопределено Тогда
		
		Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 0, Аргументы);

	КонецЕсли; 


	Если МассивСтрокаАргумента.Количество() = 2 Тогда
	
		Если Не КлассОпции.имя = Опция.Имя Тогда
			Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 1, Аргументы);
		КонецЕсли; 

		Значение = МассивСтрокаАргумента[1];

		Если ПустаяСтрока(Значение) Тогда
			Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 0, Аргументы);
		КонецЕсли;
		
		ОпцииКонтекст = КонтекстПоиска.Опции[Опция];
		Если ОпцииКонтекст = Неопределено Тогда
			ОпцииКонтекст = Новый Массив;
		КонецЕсли;
		ОпцииКонтекст.Добавить(Значение);
		КонтекстПоиска.Опции.Вставить(Опция, ОпцииКонтекст);
		
		Аргументы.Удалить(Индекс);
	
		Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 1, Аргументы);

	ИначеЕсли КлассОпции.ТипОпции = Тип("Булево") Тогда
		Если Не КлассОпции.имя = Опция.Имя Тогда
			Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 1, Аргументы);
		КонецЕсли; 
		
		ОпцииКонтекст = КонтекстПоиска.Опции[Опция];
		Если ОпцииКонтекст = Неопределено Тогда
			ОпцииКонтекст = Новый Массив;
		КонецЕсли;
		ОпцииКонтекст.Добавить(Истина);
		КонтекстПоиска.Опции.Вставить(Опция, ОпцииКонтекст);
		
		Аргументы.Удалить(Индекс);
	
		Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Истина, 1, Аргументы);
	
	Иначе

		Если Аргументы.Вграница()-Индекс < 2 Тогда
			Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 0, Аргументы);
		КонецЕсли;

		Если Не КлассОпции.имя = Опция.Имя Тогда
			Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 2, Аргументы);
		КонецЕсли; 
		

		Значение = Аргументы[Индекс+1];
		
		Если СтрНачинаетсяС(Значение, "-") Тогда
			Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 0, Аргументы);
		КонецЕсли;


		//Значение = МассивСтрокаАргумента[1];
		
		Если ПустаяСтрока(Значение) Тогда
			Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Ложь, 0, Аргументы);
		КонецЕсли;
		
		ОпцииКонтекст = КонтекстПоиска.Опции[Опция];
		Если ОпцииКонтекст = Неопределено Тогда
			ОпцииКонтекст = Новый Массив;
		КонецЕсли;
		ОпцииКонтекст.Добавить(Значение);
		КонтекстПоиска.Опции.Вставить(Опция, ОпцииКонтекст);
		
		Аргументы.Удалить(Индекс);
		Аргументы.Удалить(Индекс); // удаление значения, т.к. индекс уже сдвинулся.
			
		Возврат Новый Структура("Найден, ПрибавочныйИндекс, Аргументы", Истина, 1, Аргументы);

	КонецЕсли;

КонецФункции


Функция Приоритет() Экспорт
	Возврат 1;
КонецФункции

Функция ВСтроку() Экспорт
	Возврат Опция.Имя;
КонецФункции

Лог = Логирование.ПолучитьЛог("oscript.lib.cli_class_opt");
//Лог.УстановитьУровень(УровниЛога.Отладка);