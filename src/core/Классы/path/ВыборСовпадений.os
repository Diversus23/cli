#Использовать logos
#Использовать fluent

перем Лог;

Функция ЗаполнитьЗначения(КонтейнерыЗначений) Экспорт

	Для каждого Контейнер Из КонтейнерыЗначений Цикл

		Лог.Отладка("Заполняю значения %1", Контейнер.Ключ);

		Если Контейнер.Ключ.ЭтоМассив() Тогда
			Контейнер.Ключ.Очистить();
		КонецЕсли;

		Для каждого значениеКонтейнера Из Контейнер.Значение Цикл
			Лог.Отладка("Установил значения %1 в контейнер %2",значениеКонтейнера, Контейнер.Ключ);
			Контейнер.Ключ.УстановитьЗначение(значениеКонтейнера)

		КонецЦикла;

		Контейнер.Ключ.УстановленаИзПеременнойОкружения = Ложь;

		Если Не Контейнер.Ключ.УстановленаПользователем Тогда
			Контейнер.Ключ.УстановленаПользователем = Истина;
		КонецЕсли;

	КонецЦикла;

КонецФункции

Процедура УпроститьСоединения(Состояние, ПосетилиСостояние) Экспорт

	//Возврат; // пока не работает
	Лог.Отладка("Я УпроститьСоединения");
		
	Если ПосетилиСостояние[Состояние] = Истина Тогда
		Лог.Отладка("Я уже тут был");
		//Возврат;
	КонецЕсли;

	ПосетилиСостояние.Вставить(Состояние, Истина);
	
	Для каждого Соединение Из Состояние.МассивСоединений Цикл
		
		УпроститьСоединения(Соединение.СледующееСостояние, ПосетилиСостояние);

	КонецЦикла;

	УпроститьСвоиСоединения(Состояние);

КонецПроцедуры

Процедура УпроститьСвоиСоединения(Состояние);

	ВременныйМассив = Состояние.МассивСоединений;

	Индекс = 0;
	
	Лог.Отладка("Я всего соединений: %1", Состояние.МассивСоединений.Количество());
	
	Пока Индекс <= Состояние.МассивСоединений.ВГраница() Цикл
		Лог.Отладка("Я всего соединений внутри: %1", Состояние.МассивСоединений.Количество());
		
		Соединение = Состояние.МассивСоединений[Индекс];

		Если ТипЗнч(Соединение.Парсер) = Тип("ЛюбойСимвол") Тогда
			Лог.Отладка("Я Нашел ЛюбойСимвол");
	
			СледующееСостояние = Соединение.СледующееСостояние;
			
			Для каждого СоединениеСледующего Из СледующееСостояние.МассивСоединений Цикл

				Если НЕ Состояние.СодержитСоединения(СоединениеСледующего) Тогда

					Лог.Отладка("Я добавил сюда подчиненные соединения");
	
					Состояние.МассивСоединений.Добавить(СоединениеСледующего);
					Лог.Отладка("Добавляю соединение с парсером %1", СоединениеСледующего.Парсер);
	
				КонецЕсли;

			КонецЦикла;

			Если СледующееСостояние.Завершено Тогда
				Состояние.Завершено = Истина;
			КонецЕсли;
			Лог.Отладка("Удалил соединение с индексом %1", Индекс);
			Состояние.МассивСоединений.Удалить(Индекс);

		Иначе

			Индекс = Индекс + 1;

		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры



Процедура СортировкаСоединений(Состояние, ПосетилиСостояние) Экспорт
	
	Если ПосетилиСостояние[Состояние] = Истина Тогда
		Возврат;
	КонецЕсли;

	ПосетилиСостояние.Вставить(Состояние, Истина);
	
	СортироватьМассив(Состояние.МассивСоединений);

	Для каждого Соединение Из Состояние.МассивСоединений Цикл
		СортировкаСоединений(Соединение.СледующееСостояние, ПосетилиСостояние);
	КонецЦикла;


КонецПроцедуры

Процедура СортироватьМассив(МассивСоединений)

	ПроцессорКоллекций = ПроцессорыКоллекций.ИзКоллекции(МассивСоединений);
	МассивСоединений = ПроцессорКоллекций
		.Сортировать("Результат = Элемент1.Парсер.Приоритет() > Элемент2.Парсер.Приоритет()")
		.ВМассив();

КонецПроцедуры

Функция НовоеСостояние() Экспорт
	Возврат Новый Совпадение();
КонецФункции

Лог = Логирование.ПолучитьЛог("oscript.lib.v8runner");
Лог.УстановитьУровень(УровниЛога.Отладка);